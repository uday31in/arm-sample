{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {        
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of the VM."
            },
            "defaultValue": "[substring(concat('simplewinvm',resourceGroup().Name),0,12)]"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            },
            "defaultValue": "vmadmin1"
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the Administrator account of the new VMs. Default value is subscription id"
            }            
        },
        "windowsOSVersion": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "allowedValues": [            
                "2012-R2-Datacenter",
                "2016-Datacenter"
            ],
            "metadata": {
                "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "The size of the VM to be deployed"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "VNet name where there NVA will be deployed"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Subnet name where the NVA will be deployed"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "Resource group where the VNet is located"
            }
        },
        "vnetSubscriptionId": {
            "type": "string",
            "metadata": {
                "description": "Subscription ID where the VNet is located"
            }
        },
        "location": {
            "type": "string",
            "allowedValues": [
                "northeurope",
                "westeurope",
                "northcentralus",
                "southcentralus"
            ],
            "metadata": {
              "description": "Azure region where the hub will be deployed"
            }
          }
    },
    "variables": {       
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "OSDiskName": "osdisk",
        "nicName": "[concat(parameters('vmName'),'-nic')]",   
        "vnetId": "[concat('/subscriptions/',parameters('vnetsubscriptionId'),'/resourceGroups/',parameters('vnetResourceGroup'),'/providers/Microsoft.Network/virtualNetworks/',parameters('vnetName'))]",                    
        "subnetRef": "[concat(variables('vnetId'),'/subnets/',parameters('subnetName'))]",
        "scriptFile": "https://raw.githubusercontent.com/uday31in/arm-sample/master/mgmt/networking/nva/installrras.ps1",
        "scriptName": "installrras.ps1"
    },
    "resources": [        
        {
            "apiVersion": "2017-10-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",            
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }                    
                ],
                "enableIPForwarding": true                
            }
        },
        {
            "apiVersion": "2017-03-30",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [                
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('windowsOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {                                                
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId(parameters('vnetSubscriptionId'),resourceGroup().name,'Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'),'/CustomScriptExtension')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
            ],
            "properties":{
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "[variables('scriptFile')]"
                    ]                    
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file ',variables('scriptName'))]"
                }
            }
        }
    ]
}
