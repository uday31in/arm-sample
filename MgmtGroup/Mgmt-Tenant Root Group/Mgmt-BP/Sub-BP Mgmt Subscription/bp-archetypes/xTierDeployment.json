{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"operatingSystem": {
		  "type": "string",
		  "defaultValue": "Server2016",
		  "metadata": {
			"description": "Operating System of the Server"
		  },
		  "allowedValues": [
			"Server2012R2",
			"Server2016",
			"Ubuntu"
		  ]
		},
		"customData": {
		  "type": "string",
		  "defaultValue": "#cloud-config\n\nruncmd:\n- apt-get update\n- apt-get install nginx -y",
		  "metadata": {
			"description": "String passed down to the Virtual Machine."
		  }
		},
		"tierXNamePrefix": {
		  "type": "string",
		  "defaultValue": "web",
		  "metadata": {
			"description": "tier1 Name Prefix"
			}
		},
		"numberOfInstances": {
		  "type": "int",
		  "defaultValue": 2,
		  "metadata": {
			"description": "numberOfInstances"
		  }
		},
		"networkresourcegroupname": {
		  "type": "string",
		  "defaultValue": "upstream-ne-prod",
		  "metadata": {
			"description": "networkresourcegroupname"
		  }
		},
		"virtualNetworkName": {
		  "type": "string",
		  "defaultValue": "ne-prod",
		  "metadata": {
			"description": "virtualNetworkName"
		  }
		},
		"tierXsubnetName": {
		  "type": "string",
		  "defaultValue": "ne-prod-web",
		  "metadata": {
			"description": "tierXsubnetName"
		  }
		},
		"tierXsubnetNameIlb": {
		  "type": "string",
		  "defaultValue": "ne-prod-web-ilb",
		  "metadata": {
			"description": "tierXsubnetNameIlb"
		  }
		}
		
	
	},
	"variables": {
		"subscriptionId" : "[subscription().subscriptionId]",	
		
		"vnetID": "[resourceId(variables('subscriptionId'), parameters('networkresourcegroupname'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
		
		"storageAccountType": "Standard_LRS",
		"numberOfInstances": "[parameters('numberOfInstances')]",    
		"vmSize" : "Standard_DS1_v2",
		
		"tierXNamePrefix": "[concat(resourceGroup().name, parameters('tierXNamePrefix') )]",
		"tierXVMSubnetRef":  "[concat(variables('vnetID'), '/subnets/', parameters('tierXsubnetName'))]",
		"tierXIlbSubnetRef":  "[concat(variables('vnetID'), '/subnets/', parameters('tierXsubnetNameIlb'))]",
		
		"tierXlbname": "[concat('Microsoft.Network/loadBalancers/', variables('tierXNamePrefix'),'-ilb')]",
		"tierXlbID": "[resourceId('Microsoft.Network/loadBalancers', concat(variables('tierXNamePrefix'),'-ilb'))]",
		"tierXasgID": "[resourceId('Microsoft.Network/applicationSecurityGroups',concat(variables('tierXNamePrefix'),'-asg'))]",		
		"tierXnsgID": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('tierXNamePrefix'),'-app-nsg'))]",
		
		"tierXasgAllowedToAccessID": "[resourceId(parameters('networkresourcegroupname'), 'Microsoft.Network/applicationSecurityGroups',concat(variables('tierXNamePrefix'),'-allowed-toaccess-asg'))]",
		
		"operatingSystemValues": {
		  "Server2012R2": {
			"PublisherValue": "MicrosoftWindowsServer",
			"OfferValue": "WindowsServer",
			"SkuValue": "2012-R2-Datacenter"
		  },
		  "Server2016": {
			"PublisherValue": "MicrosoftWindowsServer",
			"OfferValue": "WindowsServer",
			"SkuValue": "2016-Datacenter"
		  },
		  "Ubuntu": {
			  "PublisherValue": "Canonical",
			  "OfferValue": "UbuntuServer",
			  "SkuValue": "16.04.0-LTS",
			  "version": "latest"
		  }
		},
		"adminUsername": "uday",
		"adminPassword": "!!123abc!!123abc"
	
	},
	"resources": [
		{
		  "apiVersion": "2016-04-30-preview",
		  "type": "Microsoft.Compute/availabilitySets",
		  "name": "[concat(variables('tierXNamePrefix'),'-av')]",
		  "location": "[resourceGroup().location]",
		  "properties": {
			"platformFaultDomainCount": 2,
			"platformUpdateDomainCount": 2,
			"managed": true
		  }
		},
		{
		  "name": "[concat(variables('tierXNamePrefix'), '-asg')]",
		  "type": "Microsoft.Network/applicationSecurityGroups",
		  "apiVersion": "2017-10-01",
		  "location": "[resourceGroup().location]",
		  "tags": {},
		  "properties": {}
		},
		
		{
			"apiVersion": "2017-05-10",
			"name": "[concat(variables('tierXNamePrefix'), '-allowed-toaccess-asg')]",
			"type": "Microsoft.Resources/deployments",
			"resourceGroup": "[parameters('networkresourcegroupname')]",            
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"parameters": {},
					"variables": {},
					"resources": [
						{
						  "name": "[concat(variables('tierXNamePrefix'), '-allowed-toaccess-asg')]",
						  "type": "Microsoft.Network/applicationSecurityGroups",
						  "apiVersion": "2017-10-01",
						  "location": "[resourceGroup().location]",						  
						  "tags": {},
						  "properties": {}
						}
					]
				},
				"parameters": {}
			}
		},
		
		{
			  "type": "Microsoft.Network/networkSecurityGroups",
			  "name": "[concat(variables('tierXNamePrefix'), '-app-nsg')]",
			  "apiVersion": "2017-10-01",
			  "location": "[resourceGroup().location]",
			  "dependsOn": [
				"[concat('Microsoft.Network/applicationSecurityGroups/', variables('tierXNamePrefix'),'-asg')]"	, 
				"[concat('Microsoft.Resources/deployments/',variables('tierXNamePrefix'), '-allowed-toaccess-asg')]"				
			  ],      
			  "properties": {
				"securityRules": [
				  {
					"name": "[concat('Allow_VMs_in_asg',variables('tierXNamePrefix'), 'to' , variables('tierXNamePrefix') )]",
					"properties": {
					  "description": "[concat('Allow',variables('tierXNamePrefix'), 'to' , variables('tierXNamePrefix') )]",
					  "protocol": "*",
					  "sourcePortRange": "*",
					  "destinationPortRange": "*",
					  "sourceApplicationSecurityGroups" : [
						{
							"id" : "[resourceId('Microsoft.Network/applicationSecurityGroups', concat(variables('tierXNamePrefix'),'-asg'))]"
						}
					  ],
					  "destinationApplicationSecurityGroups": [
						{
							"id": "[resourceId('Microsoft.Network/applicationSecurityGroups', concat(variables('tierXNamePrefix'),'-asg'))]"
						}
					  ],
					  "access": "Allow",
					  "priority": 100,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "[concat('Allow',variables('tierXNamePrefix'), 'to' , variables('tierXNamePrefix') )]",
					"properties": {
					  "description": "[concat('Allow',variables('tierXNamePrefix'), 'to' , variables('tierXNamePrefix') )]",
					  "protocol": "*",
					  "sourcePortRange": "*",
					  "destinationPortRange": "*",
					  "sourceApplicationSecurityGroups" : [
						{
							"id" : "[resourceId('Microsoft.Network/applicationSecurityGroups', concat(variables('tierXNamePrefix'),'-asg'))]"
						}
					  ],
					  "destinationApplicationSecurityGroups": [
						{
							"id": "[resourceId('Microsoft.Network/applicationSecurityGroups', concat(variables('tierXNamePrefix'),'-asg'))]"
						}
					  ],
					  "access": "Allow",
					  "priority": 101,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "[concat('Allow_to_access_traffic_in_asg',parameters('networkresourcegroupname'), 'to' , variables('tierXNamePrefix') )]",
					"properties": {
					  "description": "[concat('Allow_to_access_traffic_in_asg',parameters('networkresourcegroupname'), 'to' , variables('tierXNamePrefix') )]",
					  "protocol": "*",
					  "sourcePortRange": "*",
					  "destinationPortRange": "*",
					  "sourceApplicationSecurityGroups" : [
						{
							"id" : "[variables('tierXasgAllowedToAccessID')]"
						}
					  ],
					  "destinationApplicationSecurityGroups": [
						{
							"id": "[resourceId('Microsoft.Network/applicationSecurityGroups', concat(variables('tierXNamePrefix'),'-asg'))]"
						}
					  ],
					  "access": "Allow",
					  "priority": 102,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "enable_rdp_rule",
					"properties": {
					  "description": "Allow RDP",
					  "protocol": "Tcp",
					  "sourcePortRange": "*",
					  "destinationPortRange": "3389",
					  "sourceAddressPrefix": "VirtualNetwork",
					  "destinationAddressPrefix": "*",
					  "access": "Allow",
					  "priority": 110,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "enable_ssh_rule",
					"properties": {
					  "description": "Allow SSH",
					  "protocol": "Tcp",
					  "sourcePortRange": "*",
					  "destinationPortRange": "22",
					  "sourceAddressPrefix": "VirtualNetwork",
					  "destinationAddressPrefix": "*",
					  "access": "Allow",
					  "priority": 111,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "allow_AzureLoadBalancer_rule",
					"properties": {
					  "description": "allow_AzureLoadBalancer_rule",
					  "protocol": "*",
					  "sourcePortRange": "*",
					  "destinationPortRange": "*",
					  "sourceAddressPrefix": "AzureLoadBalancer",
					  "destinationAddressPrefix": "VirtualNetwork",
					  "access": "Allow",
					  "priority": 200,
					  "direction": "Inbound"
					}
				  },
				  {
					"name": "deny_AllowVnetInBound_rule",
					"properties": {
					  "description": "deny_AllowVnetInBound_rule",
					  "protocol": "*",
					  "sourcePortRange": "*",
					  "destinationPortRange": "*",
					  "sourceAddressPrefix": "VirtualNetwork",
					  "destinationAddressPrefix": "VirtualNetwork",
					  "access": "Deny",
					  "priority": 4000,
					  "direction": "Inbound"
					}
				  }
				]
			  }
		},
		{
		  "apiVersion": "2017-10-01",
		  "type": "Microsoft.Network/networkInterfaces",
		  "name": "[concat(variables('tierXNamePrefix'),'-nic-', copyindex(1))]",
		  "location": "[resourceGroup().location]",
		  "copy": {
			"name": "nicLoop",
			"count": "[variables('numberOfInstances')]"
		  },
		  "dependsOn": [
			"[variables('tierXlbname')]",
			"[variables('tierXasgID')]",
			"[variables('tierXnsgID')]"
		  ],
		  "properties": {
			
			"ipConfigurations": [
			  {
				"name": "ipconfig1",
				"properties": {
				  "privateIPAllocationMethod": "Dynamic",
				  "subnet": {
					"id": "[variables('tierXVMSubnetRef')]"
				  },
				  "loadBalancerBackendAddressPools": [
					{
					  "id": "[concat(variables('tierXlbID'), '/backendAddressPools/BackendPool1')]"
					}
				  ],
				  "applicationSecurityGroups" : [
					{
						"id": "[variables('tierXasgID')]" 
					}
				  ]
				}
			  }
			],
			"networkSecurityGroup": {
				"id": "[variables('tierXnsgID')]"
			}
		  }
		},
		{
		  "apiVersion": "2015-05-01-preview",
		  "type": "Microsoft.Network/loadBalancers",
		  "name": "[concat(variables('tierXNamePrefix'),'-ilb')]",
		  "location": "[resourceGroup().location]",     
		  "properties": {
			"frontendIPConfigurations": [
			  {
				"properties": {
				  "subnet": {
					"id": "[variables('tierXIlbSubnetRef')]"
				  }
				  
				},
				"name": "LoadBalancerFrontend"
			  }
			],
			"backendAddressPools": [
			  {
				"name": "BackendPool1"
			  }
			],
			"loadBalancingRules": [
			  {
				"properties": {
				  "frontendIPConfiguration": {
					"id": "[concat( variables('tierXlbID'),'/frontendIpConfigurations/LoadBalancerFrontend')]"
					
				  },
				  "backendAddressPool": {
					"id": "[concat( variables('tierXlbID'), '/backendAddressPools/BackendPool1')]"
					
				  },
				  "probe": {
					"id": "[concat(variables('tierXlbID'), '/probes/lbprobe')]"                
				  },
				  "protocol": "Tcp",
				  "frontendPort": 80,
				  "backendPort": 80,
				  "idleTimeoutInMinutes": 4
				},
				"Name": "lbrule"
			  }
			],
			"probes": [
			  {
				"properties": {
				  "protocol": "Tcp",
				  "port": 80,
				  "intervalInSeconds": 5,
				  "numberOfProbes": 2
				},
				"name": "lbprobe"
			  }
			]
		  }
		},
		{
		  "type": "Microsoft.Compute/virtualMachines",
		  "name": "[concat(variables('tierXNamePrefix'), 'vm', copyIndex(1))]",
		  "apiVersion": "2016-04-30-preview",
		  "location": "[resourceGroup().location]",
		  "copy": {
			"name": "VMcopy",
			"count": "[variables('numberOfInstances')]"
		  },
		  "properties": {
			"hardwareProfile": {
			  "vmSize": "[variables('vmSize')]"
			},
			"storageProfile": {
			  "imageReference": {
				"publisher": "[variables('operatingSystemValues')[parameters('operatingSystem')].PublisherValue]",
				"offer": "[variables('operatingSystemValues')[parameters('operatingSystem')].OfferValue]",
				"sku": "[variables('operatingSystemValues')[parameters('operatingSystem')].SkuValue]",
				"version": "latest"
			  },
			  "osDisk": {
				"name": "[concat(variables('tierXNamePrefix'),'vm',copyIndex(1))]",
				"createOption": "FromImage",
				"managedDisk": {
				  "storageAccountType": "Premium_LRS"
				},
				"caching": "ReadWrite"	
			  }
			},
			"osProfile": {
			  "computerName": "[concat(variables('tierXNamePrefix'),'vm',copyIndex(1))]",
			  "adminUsername": "[variables('adminUsername')]",          
			  "adminPassword": "[variables('adminPassword')]"
			  
			},
			"networkProfile": {
			  "networkInterfaces": [
				{
				  "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('tierXNamePrefix'),'-nic-', copyindex(1)))]"
				}
			  ]
			},
			"availabilitySet": {
			  "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(variables('tierXNamePrefix'),'-av'))]"
			}
		   
		  },
		  "dependsOn": [
			"[concat('Microsoft.Compute/availabilitySets/', concat(variables('tierXNamePrefix'),'-av'))]",
			"[concat('Microsoft.Network/networkSecurityGroups/', concat(variables('tierXNamePrefix'),'-app-nsg'))]",
			"[resourceId('Microsoft.Network/networkInterfaces', concat(variables('tierXNamePrefix'),'-nic-', copyindex(1)))]"
		  ]
		}
	]
}